import streamlit as st
import pandas as pd
import plotly.express as px

st.set_page_config(page_title="Sunburst Chart", layout="wide")
st.title("ðŸŒž Sunburst Chart â€“ Salary, Field, and Entrepreneurship")

@st.cache_data
def load_data():
    return pd.read_excel("education_career_success.xlsx", sheet_name='education_career_success')

df = load_data()

# NhÃ³m lÆ°Æ¡ng
def categorize_salary(salary):
    if salary < 30000:
        return '<30K'
    elif salary < 50000:
        return '30Kâ€“50K'
    elif salary < 70000:
        return '50Kâ€“70K'
    else:
        return '70K+'

df['Salary_Group'] = df['Starting_Salary'].apply(categorize_salary)

# Gom nhÃ³m
sunburst_data = df.groupby(['Entrepreneurship', 'Field_of_Study', 'Salary_Group']).size().reset_index(name='Count')

# Táº¡o nhÃ£n Ä‘Æ¡n giáº£n cho tá»«ng cáº¥p
sunburst_data['Ent_Label'] = sunburst_data['Entrepreneurship']
sunburst_data['Field_Label'] = sunburst_data['Field_of_Study']
sunburst_data['Salary_Label'] = sunburst_data['Salary_Group']

# Táº¡o color key cho má»—i tá»• há»£p Yes/No + ngÃ nh
sunburst_data['Color_Key'] = sunburst_data['Entrepreneurship'] + " / " + sunburst_data['Field_of_Study']

# Táº¡o báº£ng mÃ u riÃªng biá»‡t
yes_fields = sunburst_data[sunburst_data['Entrepreneurship'] == 'Yes']['Field_of_Study'].unique()
no_fields = sunburst_data[sunburst_data['Entrepreneurship'] == 'No']['Field_of_Study'].unique()

yes_colors = px.colors.qualitative.Set2
no_colors = px.colors.qualitative.Pastel1

color_discrete_map = {}

for i, field in enumerate(yes_fields):
    color_discrete_map[f"Yes / {field}"] = yes_colors[i % len(yes_colors)]
for i, field in enumerate(no_fields):
    color_discrete_map[f"No / {field}"] = no_colors[i % len(no_colors)]

# Váº½ biá»ƒu Ä‘á»“
fig = px.sunburst(
    sunburst_data,
    path=['Ent_Label', 'Field_Label', 'Salary_Label'],
    values='Count',
    color='Color_Key',
    color_discrete_map=color_discrete_map,
    title='ðŸŒž Sunburst Chart â€“ Má»—i ngÃ nh 1 mÃ u, Yes/No phÃ¢n biá»‡t rÃµ'
)

fig.update_traces(maxdepth=2, branchvalues="total")
st.plotly_chart(fig, use_container_width=True)
